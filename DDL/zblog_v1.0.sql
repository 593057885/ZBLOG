CREATE DATABASE  IF NOT EXISTS `zblog` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `zblog`;
-- MySQL dump 10.13  Distrib 5.6.17, for osx10.6 (i386)
--
-- Host: localhost    Database: zblog
-- ------------------------------------------------------
-- Server version	5.1.63

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `rel_article_tag`
--

DROP TABLE IF EXISTS `rel_article_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rel_article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=145 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `rel_article_tag`
--

LOCK TABLES `rel_article_tag` WRITE;
/*!40000 ALTER TABLE `rel_article_tag` DISABLE KEYS */;
INSERT INTO `rel_article_tag` VALUES (126,41,1),(127,40,2),(128,38,2),(129,34,9),(130,33,4),(132,42,1),(135,43,9),(136,44,10),(137,44,1),(141,6,1),(144,45,11);
/*!40000 ALTER TABLE `rel_article_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_article`
--

DROP TABLE IF EXISTS `tb_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `content` text NOT NULL COMMENT '文章内容',
  `title` varchar(200) NOT NULL COMMENT '文章标题',
  `category` int(11) NOT NULL COMMENT '文章分类',
  `create_time` timestamp NULL DEFAULT NULL COMMENT '发布时间',
  `deleted` int(11) DEFAULT '0' COMMENT '逻辑删除，0表示未删除，1表示删除',
  `read_count` int(11) DEFAULT '0' COMMENT '文章访问量',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_article`
--

LOCK TABLES `tb_article` WRITE;
/*!40000 ALTER TABLE `tb_article` DISABLE KEYS */;
INSERT INTO `tb_article` VALUES (6,'<p><span style=\"color:#555;\"><span style=\"font-size:16px;\"><strong>一、概述：</strong></span></span></p>\n\n<p><span style=\"font-size:16px;\"><span style=\"color:#555;\"><strong>　　</strong>本文介绍且记录如何解决在SpringMVC 中遇到415&nbsp;Unsupported&nbsp;Media&nbsp;Type 的问题，并且顺便介绍Spring MVC的HTTP请求信息转换器</span><code><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">HttpMessageConverter</span></a></code><span style=\"color:#555;\">。</span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\"><strong>二、问题描述：</strong></span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\">　　在SprinvMVC的Web程序中，我在页面发送Ajax 的POST请求，然后在服务器端利用@requestBody接收请求body中的参数，当时运行过程中，我想服务器发送Ajax请求，浏览器一直反馈415&nbsp;Unsupported&nbsp;Media&nbsp;Type或者400的状态码，以为是Ajax写的有问题。便查找了半天资料，才发现spring-mvc.config文件的配置中少了东西，当然也有可能是你真的在Ajax中缺少了对Content-Type参数的设置。分析后应该是我springMVC-config.xml文件配置有问题。</span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\">（注）：400：（错误请求） 服务器不理解请求的语法。&nbsp;415：（不支持的媒体类型） 请求的格式不受请求页面的支持。</span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\"><strong>三、解决方法：</strong>　</span></span></p>\n\n<p><span style=\"font-size:16px;\"><span style=\"color:#555;\">　　在springMVC-config.xml文件中，增加了一个</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/StringHttpMessageConverter.html\"><span style=\"color:#555;\">StringHttpMessageConverter</span></a><span style=\"color:#555;\">请求信息转换器，配置片段如下：</span></span></p>\n<pre><code class=\"xml\">\n<p>&lt;!--- StringHttpMessageConverter bean --&gt;<br />\n&lt; bean id = &quot;stringHttpMessageConverter&quot; class = &quot;org.springframework.http.converter.StringHttpMessageConverter&quot;/&gt;</p>\n\n<p>&lt;!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --&gt;<br />\n&lt; bean class =&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot; &gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&lt; property name= &quot;messageConverters&quot; &gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; list&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; ref bean= &quot;mappingJacksonHttpMessageConverter&quot; /&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!-- 新增的StringMessageConverter bean--&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; ref bean= &quot;stringHttpMessageConverter&quot; /&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; ref bean= &quot;jsonHttpMessageConverter&quot; /&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; ref bean= &quot;formHttpMessageConverter&quot; /&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/ list&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/ property&gt;<br />\n&lt;/ bean&gt;</p>\n</code></pre>\n<p><span style=\"font-size:16px;\"><strong><span style=\"color:#555;\">四、</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">HttpMessageConverter</span></a><span style=\"color:#555;\">请求信息转换器简介：</span></strong></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\">　　HttpMessageConverter接口指定了一个可以把Http request信息和Http response信息进行格式转换的转换器。通常实现HttpMessageConverter接口的转换器有以下几种：</span></span></p>\n\n<ol>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/ByteArrayHttpMessageConverter.html\"><span style=\"color:#555;\">ByteArrayHttpMessageConverter</span></a><span style=\"color:#555;\">: 负责读取二进制格式的数据和写出二进制格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/StringHttpMessageConverter.html\"><span style=\"color:#555;\">StringHttpMessageConverter</span></a><span style=\"color:#555;\">：&nbsp;&nbsp; 负责读取字符串格式的数据和写出二进制格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><span style=\"color:#555;\">&nbsp;</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/ResourceHttpMessageConverter.html\"><span style=\"color:#555;\">ResourceHttpMessageConverter</span></a><span style=\"color:#555;\">：负责读取资源文件和写出资源文件数据；&nbsp;</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/FormHttpMessageConverter.html\"><span style=\"color:#555;\">FormHttpMessageConverter</span></a><span style=\"color:#555;\">：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 负责读取form提交的数据（能读取的数据格式为 application/x-www-form-urlencoded，不能读取multipart/form-data格式数据）；负责写入application/x-www-from-urlencoded和multipart/form-data格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html\"><span style=\"color:#555;\">MappingJacksonHttpMessageConverter</span></a><span style=\"color:#555;\">:&nbsp; 负责读取和写入json格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/xml/SourceHttpMessageConverter.html\"><span style=\"color:#555;\">SourceHttpMessageConverter</span></a><span style=\"color:#555;\">：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 负责读取和写入 xml 中javax.xml.transform.Source定义的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html\"><span style=\"color:#555;\">Jaxb2RootElementHttpMessageConverter</span></a><span style=\"color:#555;\">:&nbsp; 负责读取和写入xml 标签格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/feed/AtomFeedHttpMessageConverter.html\"><span style=\"color:#555;\">AtomFeedHttpMessageConverter</span></a><span style=\"color:#555;\">:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 负责读取和写入Atom格式的数据；</span></span></p>\n	</li>\n	<li>\n	<p><span style=\"font-size:16px;\"><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html\"><span style=\"color:#555;\">RssChannelHttpMessageConverter</span></a><span style=\"color:#555;\">:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 负责读取和写入RSS格式的数据；</span></span></p>\n	</li>\n</ol>\n\n<p><span style=\"font-size:16px;\"><span style=\"color:#555;\">（注）更多关于HttpMessageConverter的信息请看：</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html</span></a></span></p>\n\n<p><span style=\"font-size:16px;\"><strong><span style=\"color:#555;\">五、</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">HttpMessageConverter</span></a><span style=\"color:#555;\">请求信息转换器执行流程：</span></strong></span></p>\n\n<p><span style=\"font-size:16px;\"><span style=\"color:#555;\"><strong>&nbsp; &nbsp;</strong>当用户发送请求后，@Requestbody 注解会读取请求body中的数据，默认的请求转换器</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">HttpMessageConverter</span></a><span style=\"color:#555;\">通过获取请求头Header中的Content-Type来确认请求头的数据格式，从而来为请求数据适配合适的转换器。例如contentType:applicatin/json，那么转换器会适配</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html\"><span style=\"color:#555;\">MappingJacksonHttpMessageConverter</span></a><span style=\"color:#555;\">。响应时候的时候同理，@Responsebody注解会启用</span><a href=\"http://docs.spring.io/spring/docs/3.0.x/api/org/springframework/http/converter/HttpMessageConverter.html\"><span style=\"color:#555;\">HttpMessageConverter</span></a><span style=\"color:#555;\">，通过检测Header中Accept属性来适配的响应的转换器。</span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\"><strong>总结：</strong></span></span></p>\n\n<p><span style=\"color:#555;\"><span style=\"font-size:16px;\">　　当在使用SpringMVC做服务器数据接收时，尤其是在做Ajax请求的时候，尤其要注意contentType属性，和accepte 属性的设置，在springmvc-config.xml中配置好相应的转换器。当我们在用SpringMVC做 Ajax&nbsp;请求的时候，有的做法用response.getWriter().print()的方法，还有更好的方法就是添加@Responsebody注解，直接返回Map类型的数据，转换器自动转换为JSON数据类型。</span></span></p>\n','SpringMVC 中HttpMessageConverter简介和Http请求415 Unsupported Media Type的问题',1,'2014-03-07 15:25:55',0,66),(33,'<p><strong>理解IO</strong></p>\n\n<p>&nbsp; &nbsp; &nbsp;IO（Input/Output）通常是指计算机线程进行慈磁盘读写或者网络通信时的一种行为。</p>\n\n<p><strong>同步式（Synchronous)IO和异步式(Asynchronous )IO</strong></p>\n\n<p>&nbsp; &nbsp; &nbsp;<strong>同步式：</strong>当计算机调度线程进行I/O操作命令后，由于文件的读写或者网络通信需要较长的操作时间，操作系统为了充分利用cpu，此时会暂停到当前的I/O线程对CPU的控制（故又称同步式为阻塞式I/O），把cup资源然给其他的线程资源，当I/O线程完成了操作时，此时操作系统会恢复此时的I/O线程，从而当前I/O线程重新获得了cup的的控制权，继续完成其他操作。</p>\n\n<p>&nbsp; &nbsp; &nbsp;NodeJs让很多前端开发者利用JS开发服务器变得异常的简单，而异步式I/O则是NodeJs的一大特点。</p>\n\n<p>&nbsp; &nbsp;&nbsp;<strong>&nbsp;异步式</strong>：异步式IO又称非阻塞式I/O，异步式与同步式不同的是，当线程进行IO操作时，操作系统并不是暂停当前的线程操作，而是执行完I/O指令后，操作系统继续让当前线程执行下一条指令，当I/O操作完成后，会通过事件（event)通知I/O线程，而线程在接收到通知后，会处理响应事件。</p>\n\n<p>&nbsp; &nbsp; &nbsp;简单的说，同步式是让通过多个线程完成多个任务，而异步式则是通过一个线程完成多个任务，遇到I/O操作时，依然让线程继续执行其他指令，只是在I/O完成后通知线程调度响应事件即可。</p>\n\n<p><strong>图解：</strong></p>\n\n<p>&nbsp;&nbsp;<img alt=\"\" src=\"http://images.cnitblog.com/i/443914/201403/291414088916141.png\" style=\"height:356px; width:612px\" /></p>\n\n<p><strong>示例代码：</strong></p>\n\n<p><strong><strong><strong>异步式：</strong></strong></strong></p>\n\n<p>注意这里的异步式执行结果是，控制台会先打印read over,然后才打印package.json文件中的内容，也就是说，线程执行文件IO时，继续先执行了console.log(&#39;read over&#39;); 待读取操作结束后通知线程响应此时的回调函数，执行了结果打印操作。</p>\n\n<pre>\n<code>\n 1 /*\n 2 * 异步式（Asynchronous） I/O Example. 7 */\n 8 var file = require(&#39;fs&#39;);//声明对象\n 9 //异步式读取\n10 file.readFile(&#39;file.json&#39;,&#39;utf-8&#39;, function(error,data) {\n11     if (error) {\n12         console.error(error);\n13     } else {\n14         console.log(data);\n15     }\n16 });\n17 //读取结束\n18 console.log(&quot;read over.&quot;);\n</code>\n</pre>\n\n<p><strong>运行结果：</strong></p>\n\n<pre>\n<code>\n1 &gt;node readfile.js\n2 &gt;read over.\n3 &gt;{\n4         &quot;description&quot; : &quot;this is Synchronous I/O and Aynchronous I/O test.&quot;\n5  }  </code></pre>\n\n<p><strong>同步式：</strong></p>\n\n<p>此次执行的结果则是先读取完package.json文件的内容并打印， 然后打印read over.</p>\n\n<pre>\n<code>\n 1 /**\n 2 * 同步式（Synchronous） I/O Example.\n 3 */\n 6 var file = require(&#39;fs&#39;);//声明对象\n 7 //readFileSync()方法为NodeJs官方提供的同步式文件读取方法，\n 8 //但是官方并不推荐。\n 9 var data = file.readFileSync(&#39;file.json&#39;, &#39;utf-8&#39;);\n10 console.log(data);\n11 //读取结束\n12 console.log(&quot;read over.&quot;);</code></pre>\n\n<p><strong>运行结果：</strong></p>\n\n<pre>\n<code>\n1 &gt;node readfile.js\n2 &gt;{\n3         &quot;description&quot; : &quot;this is Synchronous I/O and Aynchronous I/O test.&quot;\n4    }  \n5 &gt;read over. </code> </pre>\n\n<p><strong>结语：</strong>&nbsp;</p>\n\n<p>&nbsp; &nbsp; &nbsp;通过这2段代码的运行结果，相信大家对同步于异步的理解应该更加一目了然了。初次接触Node的朋友可以去官网查看教程，安装NodeJs，</p>\n\n<p>亲手尝试尝试NodeJs的异步编程~。如有任何疑问或者问题，欢迎联系我。</p>\n','NodeJS示例异步式(Asynchronous)IO与同步式Synchronous)IO',9,'2014-04-19 19:20:07',0,49),(34,'<p>&nbsp; 平时喜欢关注科技新闻，所以会在经常科技栏目里看到关于什么&ldquo;互联网思维&rdquo;，&ldquo;物联网&rdquo;，&ldquo;小白用户&rdquo;，&rdquo;云计算&ldquo;等等这些热词的文章。但是个人觉得很多文章是过度解读，在给读者相应的一些正面信息的同时，感觉更多的是给很多读者造成了一些负面影响。下面谈谈我自己的一些感受。</p>\n\n<p>　　<strong>互联网思维</strong></p>\n\n<p>　　过度解读的典型，弄得过渡的神秘。自从近些年互联网通过自身强大的力量对传统行业造成了巨大影响后，尤其电商更是炒的沸沸扬扬。然后通过几年便成长期了的小米公司更是达到了市值100亿美元，更是让很多传统行业者大跌眼镜，&ldquo;互联网思维&rdquo;这个词也就不知不觉经常被谁推到了科技新闻栏中。然后对互联网不是很熟悉的人，因为大家知道，或许很多传统行业的人以前可能不怎么太关心互联网络上面的事情，然后当互联网已经开始冲击自身行业的时候，才发现自己对互联网上那么的不熟。例如，很多人甚至没有玩过QQ，微博微信，贴吧之类的互联网产品，而且这些东西更像是80，90后的代名词。甚至生活中年轻人经常嘴里面冒出来的一句话，一个词都是不能理解其中的含义或者笑点。其实说到底，是由于很多传统行业人，或者老一辈人他们没有去拥抱这个时代。当&ldquo;互联网思维&rdquo;这个词进入到很多传统行业人的脑海中去的时候，经常会把这个弄的神乎其神，好像&ldquo;互联网思维&rdquo;有多么的难，多么的高大上，而且还经常被各种编者来各种过度解读。&ldquo;互联网思维&rdquo;无非就是利用互联网&ldquo;快速，强大的传播力&rdquo;等特点，何必搞的那么故弄玄虚。</p>\n\n<p>　　<strong>物联网</strong></p>\n\n<p>　　在一家物联网创业公司工作了一年多，也是有些体会。物联网其实属于互联网的一部分，其主思想应该是智能化，自动化。例如现在流行的是医疗，智能家居等。由于物联网这个新兴概念以及更加先进的传感设备的出现，让很多人看到了新的创业机遇，很多从事传统行业的人也是由于互联网的浪潮所吸引，参与到了物联网行业。关键是很多从传统行业转换过来的创业者并没有理解互联网，和物联网，经常做着做着就跑偏了。例如把物联网产品做成了互联网产品，本来是互联网与硬件的紧密结合，最好搞成了什么电子商务，即时通讯的产品。而且部分创业者老是想把什么农业，家居，方方面面都做，导致最后什么都做不好。大家都知道如今物联网本来就是新兴的东西，产品体验一旦差，根本就做不起来。所以入行请慎重，做产品要专一。</p>\n\n<p><strong>　　小白用户</strong></p>\n\n<p>　　有没有人跟我一样，听到这个词很蛋疼。什么叫小白用户？没上过网的？或者不会上网的？还是会上网玩QQ的？个人觉得目前互联网上的产品，用户体验一是对历史产品设计的一种继承，另一种就是对人类行为分析后的创新设计。不管你是什么用户，在我们进行产品设计的时候，无非就是沿袭目前互联网一贯的用户体验设计，要么就是进行创新新的设计，前者学习成本较低，后者学习成本较高而已，但是为了得到更好的体验，学习是必要的。至于那些没上过网的用户，就是非互联网用户，更谈不上小白用户。每当老板拿这个词来形容一些非互联网用户的时候，我就想吵架！例如之前做物联网产品的时候，老板把我们做的产品给一些就不上网的普通百姓看，本来物联网就是一个新兴的概念，那些连互联网都不了解，甚至连QQ都没有的用户，基本上看不懂我们的产品。目前我们设计产品的思路是深受互联网产品的影响的，所以一旦很多用户连互联网产品都不怎么用情况下，一些超前的东西你必须使用某些引导手段才行。所以请不要瞎定义小白用户，然后拿这个词说事儿～</p>\n\n<p>　　<strong>云计算 大数据</strong></p>\n\n<p>　　近2年也是非常时髦的2个词，虽说的确是进入了大数据，云服务时代，但是这东西不是说拿来撑门面的，不是时髦的什么名牌。我发现很多小公司，还没用户就开始什么大数据，产品没出来老板就在外面大谈什么云服务，云计算。云计算和大数据其实是增强互联网产品的使用体验的有效技术手段，不是拿来显前卫，忽悠领导的时髦。建议做产品的还是脚踏实地，真正该采用什么手段的时候就采用。</p>\n\n<p>　　<strong>结语</strong></p>\n\n<p>　　由于互联网给我们生活的影响，给传统行业的冲击，现在很多传统企业都想在互联网上分得一杯美羹，做房地产的，食品，医疗等等的，都在做自己的电商平台啊什么的。预感这2年是互联网的一波小高潮。对于我们程序员来说，嘿嘿，应该是很happy的。但是转行需谨慎啊，不懂互联网，很容易被技术团队坑的～</p>\n\n<p>　（以上纯属个人闲来时的思考）</p>\n','对近2年来“互联网思维”、“物联网”、“云计算”、“大数据”，“小白用户”等时髦词汇的些思考',10,'2014-04-19 19:29:43',0,78),(38,'<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">&nbsp; 前几日在利用JQuery做菜单滑动标记这个效果的时候，最后发现滑动条在我用鼠标快速滑动的时候，会出现滑动条延迟滑动，并且有卡顿的现象,相当影响体验感受。不完美～</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">在几番询问下，得到了一个延时处理的解决方案，完美解决了这个问题。</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><strong style=\"margin: 0px; padding: 0px;\">思路：</strong></p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">&nbsp;&nbsp;&nbsp; 在鼠标移入目标元素的时候，启用定时操作，我目前设置的为1/10秒，也就是说，当鼠标如果在目标元素区域停留了满足我预设值的时间范围内的话，我就执行动画效果，否则没有达到预设值的时间范围便移出来目标元素的话，便取消延时执行的操作。简单的说，满足定时条件执行，否则取消操作。</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">具体代码：</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><strong style=\"margin: 0px; padding: 0px;\">HTML 部分：</strong></p>\n\n<pre class=\"brush:xml;\">\n<code class=\"xml\">\n   1:  &lt;ul id=&quot;nav&quot;&gt; \n   2:  　&lt;li&gt;&lt;a href=&quot;#&quot;&gt;menu1&lt;/a&gt;&lt;/li&gt;\n   3:  　&lt;li&gt;&lt;a href=&quot;#&quot;&gt;menu2&lt;/a&gt;&lt;/li&gt;\n   4:  　&lt;li&gt;&lt;a href=&quot;#&quot;&gt;menu3&lt;/a&gt;&lt;/li&gt;\n   5:  　&lt;li&gt;&lt;a href=&quot;#&quot;&gt;menu4&lt;/a&gt;&lt;/li&gt;\n   6:  　&lt;span id=&quot;slide_1&quot; class=&quot;slidebar&quot;&gt;&lt;/span&gt;\n   7:  &lt;/ul&gt;</code></pre>\n\n<p><strong style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">未添加延时操作的JS代码：</strong></p>\n\n<pre class=\"brush:jscript;\">\n<code class=\"javascript\">\n   1:   \n   2:   //导航菜单一监听hover效果\n   3:  $(&quot;#nav li a&quot;).mouseenter(function() {\n   4:        $(&quot;#slide_1&quot;).animate( {\n   5:              left : $(this).offset().left\n   6:        },200);\n   7:  });</code></pre>\n\n<p><strong style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">添加延时操作的JS代码：</strong></p>\n\n<pre>\n<code class=\"javascript\">\n   1:  //加延迟处理的导航条2\n   2:  var tId = null,ele;//时间ID，当前元素\n   3:  $(&quot;#nav1 li a&quot;).mouseenter(function() {\n   4:      ele = $(this);\n   5:     //设置定时操作，并记录时间ID，用于清除定时器\n   6:      tId = setTimeout(function() {\n   7:         $(&quot;#slide_2&quot;).animate({left:$(ele).offset().left});\n   8:      }, 100);\n   9:  }).mouseout(function() {\n  10:         //当鼠标移出目标元素时，清除定时操作\n  11:          clearTimeout(tId);\n  12:  });</code></pre>\n\n<div class=\"csharpcode\" style=\"margin: 0px; padding: 0px; font-size: small; color: black; font-family: consolas, \'Courier New\', courier, monospace;\">\n<pre style=\"margin: 0em; padding: 0px; font-family: consolas, \'Courier New\', courier, monospace;\">\n<strong style=\"margin: 0px; padding: 0px;\">Demo浏览地址：</strong></pre>\n\n<pre style=\"margin: 0em; padding: 0px; font-family: consolas, \'Courier New\', courier, monospace;\">\n<a href=\"http://xiaoweijs.duapp.com/demo/slidebar.html\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(0, 0, 0); border-bottom-width: 1px; border-bottom-style: dotted; border-bottom-color: rgb(51, 51, 51);\" target=\"_blank\">http://xiaoweijs.duapp.com/demo/slidebar.html</a></pre>\n<strong style=\"margin: 0px; padding: 0px;\">总结</strong></div>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">&nbsp; 有时候对于效果过于追求的我们，像遇到了卡顿这种情况，心里难免有些不完美的感觉。以上demo 和上面的那个例子只是延时处理的一种情况，其实在做很多导航滑动，向下滑动菜单效果，滚动条滑动等等效果的的时候我们经常会遇见，但是解决思路都是相同的。增加延迟处理，终止事件。注意到这里终止事件的关键点在于clearTimeout上，先记录定时器Id,不满足条件则clear掉。</p>\n','制作滑动条菜单，如何延时处理滑动效果，避免动画卡顿',2,'2014-04-24 05:36:52',0,88),(39,'<p><span style=\"color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 16px; line-height: 24px;\"><span style=\"font-family:arial,helvetica,sans-serif;\">经常在一些大神博客里面看到非常好看的高亮代码，有sublime风格，GitHub风格等等。毫无疑问，好的高亮代码插件可以不仅仅让你的博文显得更高大上，更重要的是舒适的阅读体验。经过我在网上的一番搜罗，终于找到了一款非常赞的高亮插件，先来看看效果吧!</span></span></p>\n\n<p><strong style=\"color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">1.Javascript 效果</span></strong></p>\n\n<pre class=\"brush:jscript;\">\n//检测URL\nfunction checkeUrl(url){\n	return new RegExp(&quot;^(https|http|ftp|rtsp|mms)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]&quot;, &#39;g&#39;).test(url);\n};\n\n//控制台打印\nwindow.console = window.console || {\n	log : function(){}\n};</pre>\n\n<p><strong style=\"color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">2.Java代码</span></strong></p>\n\n<pre class=\"brush:as3;\">\npublic interface UserDao {\n    \n    /**\n     * \n     * 根据用户对象检索用户信息\n     * @param user\n     * @return User\n     * @see [类、类#方法、类#成员]\n     */\n    public User getUser(User user);\n    \n    /**\n     * 更新用户信息\n     * @param user\n     * @return int\n     */\n    public int updateUser(User user);\n}</pre>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span style=\"color:#555;\">更多高大上的效果，sublime,googlecode大家可以戳这里：</span><a data-mce-href=\"http://highlightjs.org/static/test.html\" href=\"http://highlightjs.org/static/test.html\" target=\"_blank\"><span style=\"color:#555;\">http://highlightjs.org/static/test.html</span></a></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><strong><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">使用方法：</span></strong></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">　　<strong>准备工作：</strong></span></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span style=\"color:#555;\">　　　　插件使用非常简单，只需要在你要使用插件的页面引入</span><a data-mce-href=\"http://highlightjs.org/\" href=\"http://highlightjs.org/\"><span style=\"color:#555;\">highlight.js</span></a><span style=\"color:#555;\">.和相应代码风格的Css样式文件即可。例如我这里采用的风格为：</span></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span style=\"color:#555;\">　　Solarized - Dark，那么我引入了这个css样式文件：</span><a data-mce-href=\"http://highlightjs.org/static/styles/solarized_dark.css\" href=\"http://highlightjs.org/static/styles/solarized_dark.css\" target=\"_blank\"><span style=\"color:#555;\">http://highlightjs.org/static/styles/solarized_dark.css</span></a></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">　　<strong>页面显示端，<span data-mce-style=\"line-height: 1.5;\" style=\"line-height: 1.5;\">看下面的实例代码：</span></strong></span></span></p>\n\n<pre class=\"brush:as3;\">\n//在页面中添加初始化脚本\n&lt;script&gt;\n  hljs.configure({tabReplace: &#39;    &#39;});\n  hljs.initHighlightingOnLoad();\n&lt;/script&gt;\n\n//需要高亮显示的代码需要用&lt;pre&gt;&lt;code class=&quot;language&quot;&gt;&lt;/code&gt;&lt;/pre&gt;标签括起来，\n//其中language为要显示代码是什么语言，例如要显示Java代码则是class=&quot;java&quot;,\n//html代码则是class=&quot;xml&quot;\n&lt;pre&gt;\n	&lt;code class=&quot;xml&quot;&gt;\n　　　　　　//详细代码\n	&lt;/code&gt;\n&lt;/pre&gt;</pre>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><strong><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">在博客园中使用：</span></strong></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">　 在博客后台设置中添加上JS脚本引用和初始化脚本，把要应用的代码风格css样式Copy到页面定制CSS代码中，保存。</span></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">　 然后在每次写博文时，添加完代码后，切换为HTML编辑状态，把代码部分稍作修改，把原来的pre class去掉，然后在里面加上code标签以及code class即可。</span></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">&nbsp;</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span style=\"color:#555;\">插件官网地址：</span><a data-mce-href=\"http://highlightjs.org/\" href=\"http://highlightjs.org/\" target=\"_blank\"><span style=\"color:#555;\">http://highlightjs.org/</span></a></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">赶紧去试试吧，小伙伴们！！</span></span></p>\n','给大家推荐一款高大上的代码高亮插件（sublime，github风格）——highlight.js',1,'2014-04-24 05:39:40',1,13),(40,'<p>　 经常在一些大神博客里面看到非常好看的高亮代码，有sublime风格，GitHub风格等等。毫无疑问，好的高亮代码插件可以不仅仅让你的博文显得更高大上，更重要的是舒适的阅读体验。经过我在网上的一番搜罗，终于找到了一款非常赞的高亮插件，先来看看效果吧!</p>\n\n<p>1.Javascript 效果</p>\n\n<pre class=\"brush:jscript;\">\n<code class=\"javascript\">\n//检测URL\nfunction checkeUrl(url){\n        return new RegExp(&quot;^(https|http|ftp|rtsp|mms)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]&quot;, &#39;g&#39;).test(url);\n};\n\n//控制台打印\nwindow.console = window.console || {\n        log : function(){}\n};\n</code>\n</pre>\n\n<p>2.Java代码</p>\n\n<pre>\n<code class=\"java\">\npublic interface UserDao {\n    /**\n    *\n    * 根据用户对象检索用户信息\n    * @param user\n    * @return User\n    * @see [类、类#方法、类#成员]\n    */\n    public User getUser(User user);\n    /**\n    * 更新用户信息\n    * @param user\n    * @return int\n    */\n    public int updateUser(User user);\n}\n\n</code></pre>\n\n<p><strong>使用方法： 　</strong>　</p>\n\n<p>&nbsp; <strong>&nbsp; &nbsp; 准备工作：</strong></p>\n\n<p>&nbsp; &nbsp; &nbsp; 插件使用非常简单，只需要在你要使用插件的页面引入highlight.js.和相应代码风格的Css样式文件即可。例如我这里采用的风格为： 　　Solarized - Dark，那么我引入了这个css样式文件：http://highlightjs.org/static/styles/solarized_dark.css 　　 &nbsp; &nbsp; &nbsp;</p>\n\n<p>&nbsp; &nbsp; &nbsp; <strong>页面显示端，看下面的实例代码:</strong><span style=\"line-height: 1.6;\">&nbsp; &nbsp;</span></p>\n\n<pre class=\"brush:jscript;\">\n<code class=\"javascript\">\n//在页面中添加初始化脚本\n&lt;script&gt;\n  hljs.configure({tabReplace: &#39;    &#39;});\n  hljs.initHighlightingOnLoad();\n&lt;/script&gt;\n\n//需要高亮显示的代码需要用&lt;pre&gt;&lt;code class=&quot;language&quot;&gt;&lt;/code&gt;&lt;/pre&gt;标签括起来，\n//其中language为要显示代码是什么语言，例如要显示Java代码则是class=&quot;java&quot;,\n//html代码则是class=&quot;xml&quot;\n&lt;pre&gt;\n        &lt;code class=&quot;xml&quot;&gt;\n      //详细代码\n        &lt;/code&gt;\n&lt;/pre&gt;\n</code></pre>\n\n<p><strong>在博客园中使用： 　</strong></p>\n\n<p>&nbsp; &nbsp; &nbsp;在博客后台设置中添加上JS脚本引用和初始化脚本，把要应用的代码风格css样式Copy到页面定制CSS代码中，保存。 　 然后在每次写博文时，添加完代码后，切换为HTML编辑状态，把代码部分稍作修改，把原来的pre class去掉，然后在里面加上code标签以及code class即可。插件官网地址：http://highlightjs.org/&nbsp;<span style=\"line-height: 1.6;\">赶紧去试试吧，小伙伴们！！</span></p>\n','给大家推荐一款高大上的代码高亮插件（sublime，github风格）——highlight.js',2,'2014-04-24 09:46:11',0,140),(41,'<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px;\">概述</strong></span></p>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;最近公司一.NET项目需要对其日志Log入数据库统计，写这个脚本导入的任务便落到我身上了。采用了熟练的Java,这个日志也不是很大，一个文件大概几兆，有上万条数据，一天大概有7,8个文件需要这样的导入处理。由于之前写Web没有这么去批处理这么多数据，所以没有太注意性能，第一个版本程序导入速度慢的吓人，一个文件导完可能需要10多分钟，也就是说如果把每天的文件导完可能需要2个多小时的时间，听听就很蛋疼，最终经过优化后，一个文件导入也就几秒，甚至可以更短。目标日志文件的信息都是按行存储，所以程序中按行读取后，然后进行相应的字符串截取入库。下面则为思路分享以及主要代码的分享。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp;</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px;\">优化思路</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp;&nbsp;<strong style=\"margin: 0px; padding: 0px;\">&nbsp;1.程序流程：</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;　　程序先读取本地的文件到内存，然后把内存的数据批量Insert到数据库。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp;2.归纳：</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">　　　 &nbsp;可以看出首先程序需要进行文件IO操作，然后则是数据JDBC操作，所以优化方向大致可以是以下几个：</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong style=\"margin: 0px; padding: 0px;\">a.</strong>文件IO优化</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong style=\"margin: 0px; padding: 0px;\">b.</strong>JDBC操作优化</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong style=\"margin: 0px; padding: 0px;\">c.</strong>使用多线程并行JDBC操作</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\">&nbsp;文件常见IO简介</span></strong></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;Java的文件读写操作大概有这么几种方式，但是我们应该注意几种文件操作方式的区别，哪些操作方式适合不同的数据文件对象。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">1.</strong>（InputStream/OutputStream) &nbsp; &nbsp;为字节输入/输出流，这种读写方式都是按一定字节量读取数据。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">2.</strong>&nbsp;（FileInputStream/FileOutputStream) 此方法继承自上面的（InputStream/OutpustStream）,同样按字节流输入/输出，用于读取图像之类的原始字节流</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">3.</strong>（FileReader/FileWriter) 此方法适用于按字符流的文件操作</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">4.</strong>&nbsp;（BufferedReader/BufferedWriter)&nbsp;从字符输入流中读取文本，缓冲各个字符，从而实现字符、数组和行的高效读取。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp;</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp;&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 13px;\">&nbsp;&nbsp;<span style=\"margin: 0px; padding: 0px; line-height: 1.8; color: rgb(255, 0, 0);\">注：</span>更详细的IO操作说明，请查看具体的JDK文档。</span></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">　　</span><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">此处我采用的BufferedReader按行读取，</span><strong style=\"margin: 0px; padding: 0px; font-size: 16px; line-height: 1.5;\">代码片段：</strong></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">\n<pre class=\"brush:java;\">\n<code class=\"java\">\npublic static List&lt;String&gt; getLogLinesByBuf(String filePath){\n        \n        List&lt;String&gt; items = new ArrayList&lt;String&gt;();\n        File file = new File(filePath);    \n        BufferedReader reader;\n        if (file.exists()) {\n            \n            try {\n                reader = new BufferedReader(new FileReader(file));\n                String temp = &quot;&quot;;\n                while((temp = reader.readLine()) != null) {\n                    items.add(temp);\n                }            \n                //close\n                reader.close();\n            } catch (Exception e) {                \n                e.printStackTrace();\n            }\n        } else {\n            System.out.println(&quot;该路径文件不存在.&quot;);\n        }        \n        return items;\n    }</code></pre>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px;\">PreparedStatement和Statement&nbsp;</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp; JDBC操作我们经常会用到PreparedStatement和Statement,PreparedStatement相对Statement来讲，PreparedStatement拥有预编译能力，性能更好，2者其它的优缺点比较可以查看相关的资料。另外，平常我们插入数据都是一条，2条，当完成成千上万条数据插入操作的时候，你会看到性能是直线下降的，所以这里会采用sql批处理。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;&nbsp;<strong style=\"margin: 0px; padding: 0px;\">&nbsp;代码片段：</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">\n<pre class=\"brush:java;\">\n<code class=\"java\">\npublic static void insertLogInfo(List&lt;String&gt; data) {\n        \n        String sql = &quot;INSERT INTO log_info(date_time,s_sitename,s_ip,cs_method,cs_uri_stem,cs_uri_query,&quot;\n                + &quot;s_port,cs_username,c_ip,cs_user_agent,sc_status,sc_substatus,sc_win32_status&quot;\n                + &quot;) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)&quot;;\n        Connection conn = DBSource.getConnection();\n        int count = 0;\n        try {\n            conn.setAutoCommit(false);\n            PreparedStatement prest = conn.prepareStatement(sql);  \n            \n            for(String str : data) {\n                String[] arr = str.split(&quot; &quot;);\n                prest.setString(1, arr[0]+&quot; &quot;+arr[1]);\n                prest.setString(2, arr[2]);\n                prest.setString(3, arr[3]);\n                prest.setString(4, arr[4]);\n                prest.setString(5, arr[5]);\n                prest.setString(6, arr[6]);\n                prest.setString(7, arr[7]);\n                prest.setString(8, arr[8]);\n                prest.setString(9, arr[9]);\n                prest.setString(10, arr[10]);\n                prest.setString(11, arr[11]);\n                prest.setString(12, arr[12]);\n                prest.setString(13, arr[13]);\n                //添加到批处理\n                prest.addBatch();    \n            }\n\n            int [] intarr = prest.executeBatch();\n            conn.commit();  \n            prest.clearBatch();                      \n            prest.close();\n            conn.close();\n            for (int j = 0 ; j &lt; intarr.length; j++) {\n                if (intarr[j] &gt; 0) {\n                    count +=1;\n                }\n            }    \n        } catch (Exception e) {\n            System.out.println(new Date().toLocaleString()+&quot;:数据库插入操作失败&quot;+e.getMessage());\n        }      \n        System.out.println(&quot;本次操作成功插入&quot;+count+&quot;行数据&quot;);    \n    }</code></pre>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\">多线程并行处理</span></strong></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;例如本来1万条数据是一个线程进行JDBC批量提交，现在启用5个线程并行处理，每个线程2000条数据，甚至你可以根据数据量来分配更多线程来完成同步提交，性能提升会比较明显。</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp;<strong style=\"margin: 0px; padding: 0px;\">&nbsp;&nbsp; &nbsp;代码片段：</strong></span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\"><strong style=\"margin: 0px; padding: 0px;\">　　</strong>Thread类：</span></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">\n<pre class=\"brush:java;gutter:false;toolbar:false;\">\n<code class=\"java\">\npackage com.xj.dbsource;\n\nimport java.io.File;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.Date;\nimport java.util.List;\n\nimport com.json.utils.JsonFileUtils;\nimport com.xj.iislog.bean.JDBCInfo;\n\n\n\n/**\n * \n * @author Ziv\n * 数据操作源\n */\npublic class DBSource extends Thread {\n    \n    //声明对象\n    private static Statement statement;\n    //连接对象\n    private static Connection conn;\n    \n    private List&lt;String&gt; data;\n        \n    public DBSource(List&lt;String&gt; data) {\n        super();\n        this.data = data;\n    }\n\n    public void run(){\n        System.out.println(System.currentTimeMillis());\n        DBSource.insertLogInfo(data);\n        System.out.println(System.currentTimeMillis());\n    }\n    \n    /**\n     * \n     * @param sql\n     * @return int\n     */\n    @SuppressWarnings(&quot;deprecation&quot;)\n    public int insert(String sql) {\n        \n        int result = 0;\n        try {\n            conn = getConnection();\n            statement = conn.createStatement();\n            result = statement.executeUpdate(sql);        \n            //关闭连接\n            conn.close();\n        } catch (SQLException e) {\n            System.out.println(new Date().toLocaleString()+&quot;:数据库插入操作失败&quot; +e.getMessage());\n        }\n        \n        return result;\n    }\n    \n    /**\n     * prepared方式入库\n     * @param arr\n     * @return\n     * @throws SQLException\n     */\n    @SuppressWarnings(&quot;deprecation&quot;)\n    public static void insertLogInfo(List&lt;String&gt; data) {\n        \n        String sql = &quot;INSERT INTO log_info(date_time,s_sitename,s_ip,cs_method,cs_uri_stem,cs_uri_query,&quot;\n                + &quot;s_port,cs_username,c_ip,cs_user_agent,sc_status,sc_substatus,sc_win32_status&quot;\n                + &quot;) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)&quot;;\n        Connection conn = DBSource.getConnection();\n        int count = 0;\n        try {\n            conn.setAutoCommit(false);\n            PreparedStatement prest = conn.prepareStatement(sql);  \n            \n            for(String str : data) {\n                String[] arr = str.split(&quot; &quot;);\n                prest.setString(1, arr[0]+&quot; &quot;+arr[1]);\n                prest.setString(2, arr[2]);\n                prest.setString(3, arr[3]);\n                prest.setString(4, arr[4]);\n                prest.setString(5, arr[5]);\n                prest.setString(6, arr[6]);\n                prest.setString(7, arr[7]);\n                prest.setString(8, arr[8]);\n                prest.setString(9, arr[9]);\n                prest.setString(10, arr[10]);\n                prest.setString(11, arr[11]);\n                prest.setString(12, arr[12]);\n                prest.setString(13, arr[13]);\n                //添加到批处理\n                prest.addBatch();    \n            }\n\n            int [] intarr = prest.executeBatch();\n            conn.commit();  \n            prest.clearBatch();                      \n            prest.close();\n            conn.close();\n            for (int j = 0 ; j &lt; intarr.length; j++) {\n                if (intarr[j] &gt; 0) {\n                    count +=1;\n                }\n            }    \n        } catch (Exception e) {\n            System.out.println(new Date().toLocaleString()+&quot;:数据库插入操作失败&quot;+e.getMessage());\n        }      \n        System.out.println(&quot;本次操作成功插入&quot;+count+&quot;行数据&quot;);    \n    }\n    \n    /**\n     * 创建连接池\n     * @return Connection\n     */\n    public static Connection getConnection() {\n        Connection con = null;\n        try {\n            //从配置文件中获取jdbc config\n            JDBCInfo jdbc = JsonFileUtils.readJsonFile(new File(&quot;resource/config.json&quot;), JDBCInfo.class);\n            if (jdbc != null) {\n                //mysql驱动加载\n                Class.forName(jdbc.getDriver());\n                con = DriverManager.getConnection(jdbc.getUrl(),\n                        jdbc.getUser(), jdbc.getPassword());                            \n            }\n        } catch (Exception e) {\n            System.out.println(&quot;数据库连接失败&quot; +e.getMessage());\n        }\n        return con;\n    }\n    \n    \n    /**\n     * 获取Sql\n     * @param arr\n     * @return\n     */\n    public String getSql(String[] arr) {\n        \n        StringBuffer sql = new StringBuffer(&quot;INSERT INTO log_info (&quot;);\n        sql.append(&quot;date_time,&quot;);\n        sql.append(&quot;s_sitename,&quot;);\n        sql.append(&quot;s_ip,&quot;);\n        sql.append(&quot;cs_method,&quot;);\n        sql.append(&quot;cs_uri_stem,&quot;);\n        sql.append(&quot;cs_uri_query,&quot;);\n        sql.append(&quot;s_port,&quot;);\n        sql.append(&quot;cs_username,&quot;);\n        sql.append(&quot;c_ip,&quot;);\n        sql.append(&quot;cs_user_agent,&quot;);\n        sql.append(&quot;sc_status,&quot;);\n        sql.append(&quot;sc_substatus,&quot;);\n        sql.append(&quot;sc_win32_status&quot;);\n        sql.append(&quot;) VALUES (&#39;&quot;);\n        sql.append(arr[0]+&quot; &quot;+arr[1]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[2]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[3]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[4]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[5]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[6]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[7]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[8]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[9]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[10]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[11]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[12]);\n        sql.append(&quot;&#39;,&#39;&quot;);\n        sql.append(arr[13]);\n        sql.append(&quot;&#39;)&quot;);\n        \n        return sql.toString();\n    }\n}</code></pre>\n\n<p><span style=\"font-family: verdana, Arial, Helvetica, sans-serif; font-size: 16px; line-height: 28.799999237060547px;\">　　调用代码：</span></p>\n\n<pre class=\"brush:java;\">\n<code class=\"java\">\n/**\n     * 此方法采用递归操作，直至数据全部入库写入完毕\n     * 同时调用5个线程进行入库操作\n     * @param data\n     * @param start\n     * @param end\n     */\n    public static void threadsHandle(List&lt;String&gt; data, int start, int end) {\n        \n        int total = data.size();\n        int size = (int)data.size()/5;\n        //数据不越界\n        if (start &lt; total) {\n            List&lt;String&gt; temp = null;\n            if (end &lt; total) {\n                temp = data.subList(start, end);                        \n            } else if (end &gt;= total) {\n                temp = data.subList(start, total);\n            }\n            //执行数据写入\n            DBSource thread = new DBSource(temp);\n            thread.start();\n\n            start = end;\n            end = start+size;\n            threadsHandle(data, start, end);\n        }\n    }</code></pre>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 18px;\">最终结果：</span></strong></div>\n\n<div style=\"margin: 0px; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;\">&nbsp; &nbsp; &nbsp;原来的12分钟，变成了6秒左右，效率大了一大截。其他朋友如果有更好的建议，可以跟我交流下0.0。下次再把数据弄的更大些。</span></div>\n</div>\n</div>\n</div>\n','从文件导数据到数据库的性能优化思路（笔记）',1,'2014-04-25 06:12:51',0,84),(42,'<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">准备工作：</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　主要依赖的包：</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　1.axis.jar</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　官网：http://axis.apache.org/axis/</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　2.jaxrpc.jar</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　下载地址：http://www.java2s.com/Code/Jar/j/Downloadjaxrpcjar.htm</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">说明：</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　在拿到wsdl地址后先分析清楚xml文件的一些参数，然后再动手写代码，例如service名称，<span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">targetNamespace,请求operation的名称，要传入的参数类型，返回结果类型等等。具体的代码参考如下：</span></p>\n\n<div>&nbsp;</div>\n\n<div>\n<pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; line-height: 25.200000762939453px;\">\n<code class=\"java hljs \" style=\"margin: 0px; padding: 0.5em; display: block; background-color: rgb(0, 43, 54); color: rgb(131, 148, 150); background-position: initial initial; background-repeat: initial initial;\">\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">1</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">package</span> com.joysee.account.service.impl;\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">2</span> \n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">3</span> \n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">4</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> java.rmi.RemoteException;\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">5</span> \n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">6</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> javax.xml.namespace.QName;\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">7</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> javax.xml.rpc.ParameterMode;\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">8</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> javax.xml.rpc.ServiceException;\n <span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">9</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">10</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> org.apache.axis.client.Call;\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">11</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">import</span> org.apache.axis.client.Service;\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">12</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">13</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">14</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">public</span> <span class=\"hljs-class\" style=\"margin: 0px; padding: 0px; line-height: 1.8;\"><span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">class</span> <span class=\"hljs-title\" style=\"margin: 0px; padding: 0px; color: rgb(181, 137, 0); line-height: 1.8;\">Test</span> {</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">15</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">16</span>     <span class=\"hljs-javadoc\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">/**\n17      *<span class=\"hljs-javadoctag\" style=\"margin: 0px; padding: 0px; line-height: 1.8;\"> @param</span> args\n18      *<span class=\"hljs-javadoctag\" style=\"margin: 0px; padding: 0px; line-height: 1.8;\"> @throws</span> ServiceException \n19      *<span class=\"hljs-javadoctag\" style=\"margin: 0px; padding: 0px; line-height: 1.8;\"> @throws</span> MalformedURLException \n20      *<span class=\"hljs-javadoctag\" style=\"margin: 0px; padding: 0px; line-height: 1.8;\"> @throws</span> RemoteException \n21      */</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">22</span>     <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">public</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">static</span> <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">void</span> <span class=\"hljs-title\" style=\"margin: 0px; padding: 0px; color: rgb(38, 139, 210); line-height: 1.8;\">main</span>(String[] args) <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">throws</span> ServiceException, RemoteException {\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">23</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">24</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//WSDL地址</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">25</span>         String wsdlUrl =<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;http://IP:PORT/ExampleWebService?wsdl&quot;</span>;  \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">26</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//看具体响应的WSDL中的namespace</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">27</span>         String nameSpaceUri =<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;http://ws.exmaple.com/&quot;</span>;    \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">28</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">29</span>         Service service = <span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">new</span> Service();\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">30</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">31</span>         Call call = (Call)service.createCall();\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">32</span>         call.setTargetEndpointAddress(wsdlUrl);\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">33</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">34</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//设置operation 名称，</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">35</span>         call.setOperationName(<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">new</span> QName(nameSpaceUri, <span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;order&quot;</span>));\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">36</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">37</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//设置账户，注意参数为XSD_STRRING</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">38</span>         call.addParameter(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;account&quot;</span>, org.apache.axis.Constants.XSD_STRING,\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">39</span>                 ParameterMode.IN);\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">40</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">41</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//设置账户，注意参数为XSD_LONG</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">42</span>         call.addParameter(<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;price&quot;</span>, org.apache.axis.Constants.XSD_LONG,\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">43</span>                 ParameterMode.IN);\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">44</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">45</span>         <span class=\"hljs-comment\" style=\"margin: 0px; padding: 0px; color: rgb(88, 110, 117); line-height: 1.8;\">//设置返回类型为对象数组</span>\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">46</span>         call.setReturnClass(Object[].class);\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">47</span>    \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">48</span>         Object[] result = (Object[]) call.invoke(<span class=\"hljs-keyword\" style=\"margin: 0px; padding: 0px; color: rgb(133, 153, 0); line-height: 1.8;\">new</span> Object[]{<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;test&quot;</span>,<span class=\"hljs-string\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">&quot;123456&quot;</span>});\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">49</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">50</span>         System.out.println(result[<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">0</span>]);\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">51</span>         \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">52</span>     }\n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">53</span> \n<span class=\"hljs-number\" style=\"margin: 0px; padding: 0px; color: rgb(42, 161, 152); line-height: 1.8;\">54</span> }\n</code></pre>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">&nbsp;</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">常见异常：</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">1.org.xml.sax.SAXException: No deserializer for {http://www.w3.org/2001/XMLSchema}anyType</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　　这个异常需要检查call.setReturnClass(); 中的类型，或者是setReturnType()</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">2.&nbsp;Unexpected wrapper element order found.&nbsp;</p>\n\n<p style=\"margin: 10px auto; padding: 0px; font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 25.200000762939453px;\">　可以检查setOperationName中的QName参数，其中的NameSpace地址是不是有问题，或者operation名是否有误</p>\n</div>\n','Java利用Axis远程调用WebService接口',1,'2014-04-29 09:04:40',0,66),(43,'<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">　　2012年秋季，正是大伙急于找实习工作的时候。尝试出去找过很多实习单位，但是基本上都是不靠谱，然后就是我自己能力的不足。所以找工作之路也是异常艰辛和曲折。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; &nbsp; &nbsp;学了那么久的Java，做过那么多的小练习，但是说实话，感觉没有一个作品或者成功是相对完整的，无论是在UI界面，功能完善上都是如此。原因大多是心态上比较敷衍，人比较懒惰，没有把东西当作真正的作品。那个时候看过很多大神写的博客系统，自己也玩过wordpress,所以一直想给自己写一个博客系统，这一次决心做的像样些，要来的专业些。那个时候也是没有犹豫，便动手起来。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; &nbsp; 从前端UI的设计，到数据库后台的设计，差不多花了我将近半个月的时间，做出来一个看起来外观还行的博客系统，但是那个时候连后台也没有。只有基本的博文展示功能，太过于简洁，只不过前台看起来还行。所以那个时候我自己花钱买域名，买服务器，把它给放到网上，然后跟很多小伙伴分享了下自己的作品，也是收到了不少鼓励，然后还有很多有用的建议。也是这次动手认真的作品所带来的鼓励，在那段找工作艰难的时期，我一个人决定离开武汉，我要主动出击！果不其然，由于这件小作品，给我在后来很多次的面试中带来了更多的机会和肯定。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; &nbsp;经过一年多的工作，一年多依然是学习了更多的知识，而回头看看曾经做过的小博客系统，里面凌乱的代码，和粗糙的细节处理等等让我又是动了重构它的心情。是的，我觉得让他更完整写，要做的更像样子些，我不仅要写的自己用的时候感觉像个系统，我还要让别人用的时候感觉爽，程序员做的产品不应该就是这样么，我们应该把自己当作真正的&ldquo;工程师&quot;看待，从码农到工程师是非常艰巨的一步，是一种巨的跨越！</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; 仔细整理了一些，发现缺乏的功能太多，连个后台都没有！文章显示的排版也是很随意，每次写的文章需要预先排版后才放入数据库，是的，这就是我当时认为还可以的作品！！列举里下功能项，数据库不得不重新设计，需要新增很多表，为了避免自己在设计上的短板，我决定加入Bootstrap这个东西，看起来应该会更好些。服务器端依然用Java代码，但是这次换了我更加偏爱的框架SpringMvc+Mybatis，开始的一周基本上原先的东西基本上全部作废了，重构基本上变成了重写0.0。&nbsp;</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp;我在代码里面添加了更多的注释，排版上也尽量让自己看起来舒服，我发现我有些小小的强迫症的倾向，现在工作当中对代码的要求也是越是如此。本来预先设计的数据表，在真正写功能的时候忽然发现很多地方并没有满足需求，所以也是会反复的增加或者修改字段，包括字段的长度或者类型等等。这也是让我更加意识到数据库的预先设计上是一件很麻烦的事情，需要考虑的足够周到。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; &nbsp;当博客的界面第一次出来后，我发现不是很满意，无论是布局的高宽，色调的搭配我是反反复复改了好多遍，最后还是改的非常简洁的黑白，当时考虑到技术博客的目的，所以并未想要做出怎样炫酷的效果。自己更倾向那种持久耐看，简洁风的东西。这一次没有产品经理，也没有设计师的督促，每一个像素，每一个div都是自己要求自己做到相对满意。当然，可能有PM，和设计师可能会产生更好的效果。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; 利用上班业余的时间去做额外的东西，有时候的确是相当累的一件事情，但是当你看到你的作品从你脑袋里面的想象慢慢被编织成一行行代码，最后运行到你眼前的时候，一种无形的力量推动着你一步步往前走。我知道一个博客系统没有什么特别的技术，对于很多人来说应该很简单，但是当你一个人想去把一件事情做好的时候，事实上再简单的事情也变得不简单，总会有些你意想不到的东西，总有些你没有能考虑到的事情出现，你需要一步一步慢慢的去完成它，收获的不仅仅是一份作品，更是一种心态。</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp;园子里面也经常有朋友分享他们的作品，相信他们与我一样收获很多，如果你热爱创造，热爱编程，那么就去用代码去实现你脑袋里面的想法吧，无论别人做过没有做过，都应该去尝试，享受编程真正带来的乐趣!最后分享下作品的地址，当然还有很多地方不够完善，以后慢慢去改善，就像创造了生命，然后慢慢培养成长一样！各位五一快乐！</span></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span data-mce-style=\"font-size: 16px;\"><span style=\"color:#555;\">ZBLOG：</span><a data-mce-href=\"http://imziv.com/\" href=\"http://imziv.com/\" target=\"_blank\"><span style=\"color:#555;\">http://imziv.com/</span></a></span></span></div>\n\n<div style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span style=\"font-size:16px;\"><span style=\"color:#555;\"><span data-mce-style=\"font-size: 16px;\">&nbsp; &nbsp;</span></span></span></div>\n','为自己尝试写点东西吧，程序员们！',1,'2014-05-01 06:11:03',0,125),(44,'<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">　　在使用Spring的过程中，为了避免大量使用Bean注入的Xml配置文件,我们会采用Spring提供的自动扫描注入的方式,只需要添加几行自动注入的的配置,便可以完成</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">Service层,Controller层等等的注入配置.使用过程中,在Service层中的实现类头上加@Compopnet注解，在Controller类头加@Controller注解，便完成了配置。例如在</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">Controller中当我们调用某个Service时就不需要Set方法了，直接通过@Autowried 注解对Service对象进行注解即可：例如</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">在Controller中：</p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<code class=\"java\">\n<span data-mce-style=\"color: #000000;\">@Controller\n@RequestMapping(&quot;/test&quot;)\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">public</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">class</span><span data-mce-style=\"color: #000000;\"> ExampleController {\n     @Autowired  \n     </span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">private</span><span data-mce-style=\"color: #000000;\"> ExampleService service;       \n}</span></code></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">在Service中</p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<code class=\"java\">\n<span data-mce-style=\"color: #000000;\">@Component \n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">public</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">class</span><span data-mce-style=\"color: #000000;\"> ExampleServiceImpl Implements ExampleService {\n     @Autowired  \n     </span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">private</span><span data-mce-style=\"color: #000000;\"> ExampleDao exampleDao;       \n}</span></code></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">Spring 中的XML配置：</p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<code class=\"java\">\n<span data-mce-style=\"color: #008000;\" style=\"color: rgb(0, 128, 0);\">&lt;!--</span><span data-mce-style=\"color: #008000;\" style=\"color: rgb(0, 128, 0);\"> 自动扫描service,controller组件 </span><span data-mce-style=\"color: #008000;\" style=\"color: rgb(0, 128, 0);\">--&gt;</span>\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">&lt;</span><span data-mce-style=\"color: #800000;\" style=\"color: rgb(128, 0, 0);\">context:component-scan </span><span data-mce-style=\"color: #ff0000;\" style=\"color: rgb(255, 0, 0);\">base-package</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">=&quot;com.example.service.*&quot;</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">/&gt;</span>\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">&lt;</span><span data-mce-style=\"color: #800000;\" style=\"color: rgb(128, 0, 0);\">context:component-scan </span><span data-mce-style=\"color: #ff0000;\" style=\"color: rgb(255, 0, 0);\">base-package</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">=&quot;com.example.controller.*&quot;</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">/&gt;</span></code></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">　　通常，在Bean为添加@Component注解的情况下，在启动服务时，服务会提前报出以下代码中这样的异常情况下，此时应该检查相应Bean是否正确添加@Component</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">注解，而在Controller层中未配置@Controller的情况，启动时服务可能不会爆出异常，但是你会发现页面请求中的URL地址是正确的，当时无论如何也访问不到Controller中相</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">对应的方法，这个时候就需要<span data-mce-style=\"line-height: 1.5;\" style=\"line-height: 1.5;\">那么需要检查@Controller注解和@RequestMapping注解</span><span data-mce-style=\"line-height: 1.5;\" style=\"line-height: 1.5;\">是否</span><span data-mce-style=\"line-height: 1.5;\" style=\"line-height: 1.5;\">已经添加到Class上面了。</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<code class=\"java\">\norg.springframework.beans.factory.BeanCreationException:Error creating bean with name &#39;example&#39;<span data-mce-style=\"color: #000000;\">\n\nNo matching bean of type [com.example.ExampleService] found </span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">for</span> dependency: expected at least 1 bean which qualifies as autowire candidate <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">for</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">this</span> dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">true</span>)}</code></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">下面就详细介绍下@Component，@Controller注解：</p>\n\n<ul style=\"margin-left: 0px; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">\n	<li style=\"margin-left: 0px; padding-left: 0px;\" type=\"circle\">org.springframework.stereotype.<a data-mce-href=\"http://docs.spring.io/spring/docs/3.1.x/javadoc-api/org/springframework/stereotype/Component.html\" href=\"http://docs.spring.io/spring/docs/3.1.x/javadoc-api/org/springframework/stereotype/Component.html\" title=\"annotation in org.springframework.stereotype\"><strong>Component</strong></a>&nbsp;(implements java.lang.annotation.<a data-mce-href=\"http://download.oracle.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true\" href=\"http://download.oracle.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true\" title=\"class or interface in java.lang.annotation\">Annotation</a>)</li>\n</ul>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">&nbsp;　　在自动服务，spring初始化的时候，spring会把所有添加@Component注解的类作为使用自动扫描注入配置路径下的备选对象，同时在初始化spring@Autowired</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">注解相应的Bean时，@Autowired标签会自动寻找相应的备选对象完成对bean的注入工作。</p>\n\n<ul style=\"margin-left: 0px; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">\n	<li style=\"margin-left: 0px; padding-left: 0px;\" type=\"circle\">org.springframework.stereotype.<a data-mce-href=\"http://docs.spring.io/spring/docs/3.1.x/javadoc-api/org/springframework/stereotype/Controller.html\" href=\"http://docs.spring.io/spring/docs/3.1.x/javadoc-api/org/springframework/stereotype/Controller.html\" title=\"annotation in org.springframework.stereotype\"><strong>Controller</strong></a>&nbsp;(implements java.lang.annotation.<a data-mce-href=\"http://download.oracle.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true\" href=\"http://download.oracle.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true\" title=\"class or interface in java.lang.annotation\">Annotation</a>)</li>\n</ul>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">&nbsp;　　@Controller注解是一个特殊的Component，它允许了实现类可以通过扫描类配置路径的方式完成自动注入，通常@Controller是结合@RequestMapping注解一起使用的。</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">结语：</p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">　　　通过了解Spring的注解可以帮助我们在使用Spring开发过程中提高开发效率，同时也加强了我们对Spring的认识。在使用Spring开发的过程中，我个人更倾向于使用注解的方式，减少配置文件代码。</p>\n','Spring中@Component注解,@Controller注解详解',1,'2014-05-12 02:57:25',0,30),(45,'<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><strong><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">场景：</span></strong></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">　　例如：某系统，用户每天只能拥有一次的抽奖机会，抽过后当天就不可再抽，但是过了24：00点后用户就重新拥有一次抽奖机会。像这种<span data-mce-style=\"line-height: 1.5;\" style=\"line-height: 1.5;\">需要数据库定时对某个字段进行更新操作的任务，完全可以通过数据库本身的事件机制进行操作，而服务器端也不需要用额外的代码进行这种监控定时的操作。</span></span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><strong><span data-mce-style=\"line-height: 1.5; font-size: 16px;\" style=\"line-height: 1.5; font-size: 16px;\">Mysql:</span></strong></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"line-height: 1.5; font-size: 16px;\" style=\"line-height: 1.5; font-size: 16px;\">　　本文讨论的是Mysql数据库，Event Scheduler事件调度器应该是在Mysql5.1引入的，所以使用定时任务调度时，请注意查看你的Mysql版本。</span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"line-height: 1.5; font-size: 16px;\" style=\"line-height: 1.5; font-size: 16px;\">创建事件调度的语法：</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">创建事件event_name</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span><span data-mce-style=\"color: #000000;\">\nDELIMITER $$\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">CREATE</span> event <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">IF</span> <span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">NOT</span> <span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">EXISTS</span><span data-mce-style=\"color: #000000;\"> event_name\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span> SCHEDULE 任务条件 \n\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span><span data-mce-style=\"color: #000000;\"> COMPLETION PRESERVE\n\nDO SQL操作\n\nDELIMITER ;</span></span></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><strong>实例情景</strong>：每半个小时更新统计字段count为0，</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">创建定时定时更新count字段事件</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span><span data-mce-style=\"color: #000000;\">\nDELIMITER $$\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">CREATE</span> event <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">IF</span> <span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">NOT</span> <span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">EXISTS</span><span data-mce-style=\"color: #000000;\"> update_count\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span> SCHEDULE EVERY 30 MINUTE </span>\n\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">/*MYSQL注意时区设置，默认非中国时区*/</span>\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">STARTS TIMESTAMP &#39;2009-12-18 02:58:00&#39;\n\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span><span data-mce-style=\"color: #000000;\"> COMPLETION PRESERVE\n\nDO update tb_count set count=0 $$\n\nDELIMITER ;</span></span></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">如上，创建了一个名叫update_count的事件，执行条件则为每30分钟执行一次，(EVERY 30 MINUTE)，执行Sql为(update tb_count set count=0)， 当然你可能会按天执行，</span><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">所以你也可以写(EVERY 1 DAY)，</span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">如果执行的任务Sql复杂，我们可以写触发器，直接看示例代码：</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span data-mce-style=\"color: #000000;\">DELIMITER $$\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">DROP</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">PROCEDURE</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">IF</span> <span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">EXISTS</span><span data-mce-style=\"color: #000000;\"> update_count$$\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">CREATE</span> <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">PROCEDURE</span><span data-mce-style=\"color: #000000;\"> update_count()\n\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">BEGIN</span>\n    <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">UPDATE</span> tb_count <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">SET</span> count<span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">=</span><span data-mce-style=\"color: #800000; font-weight: bold;\" style=\"color: rgb(128, 0, 0); font-weight: bold;\">0</span><span data-mce-style=\"color: #000000;\">;\n</span><span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">END</span><span data-mce-style=\"color: #000000;\">$$\n\nDELIMITER ;</span></span></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">以上为创建一个存储过程update_count,执行对tb_count中count字段的更新。任务中代码中do字段后则改为<span data-mce-style=\"color: #008000;\" style=\"color: rgb(0, 128, 0);\"><strong>（call update_count() $$)</strong></span>。当然你可能会更复杂的需求。</span></p>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">添加完event后，还需要查看event_scheduler是否开启，否则添加的event不会执行，移步下面的代码：</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">查看event是否开启</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span><span data-mce-style=\"color: #000000;\">\nSHOW VARIABLES </span><span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">LIKE</span> <span data-mce-style=\"color: #ff0000;\" style=\"color: rgb(255, 0, 0);\">&#39;</span><span data-mce-style=\"color: #ff0000;\" style=\"color: rgb(255, 0, 0);\">%sche%</span><span data-mce-style=\"color: #ff0000;\" style=\"color: rgb(255, 0, 0);\">&#39;</span><span data-mce-style=\"color: #000000;\">;\n</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">开启event</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span>\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">SET</span> GLOBAL event_scheduler<span data-mce-style=\"color: #808080;\" style=\"color: rgb(128, 128, 128);\">=</span><span data-mce-style=\"color: #800000; font-weight: bold;\" style=\"color: rgb(128, 0, 0); font-weight: bold;\">1</span>;</span></pre>\n</div>\n\n<p style=\"margin: 10px auto; color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\"><span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\">查看和关闭你所添加的event:</span></p>\n\n<div class=\"cnblogs_code\" style=\"background-color: rgb(245, 245, 245); font-family: \'Courier New\'; font-size: 12px; border: 1px solid rgb(204, 204, 204); padding: 5px; word-break: break-all; overflow: auto; width: 1125.75px; margin: 5px 0px; color: rgb(0, 0, 0);\">\n<pre style=\"font-family: \'Courier New\'; margin: 5px 8px; padding: 5px;\">\n<span data-mce-style=\"font-size: 16px;\" style=\"font-size: 16px;\"><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">关闭 event </span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span>\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ALTER</span> event update_count <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span><span data-mce-style=\"color: #000000;\"> COMPLETION PRESERVE DISABLE;\n\n</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">/*</span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">启用 event </span><span data-mce-style=\"color: #008080;\" style=\"color: rgb(0, 128, 128);\">*/</span>\n<span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ALTER</span> event update_count <span data-mce-style=\"color: #0000ff;\" style=\"color: rgb(0, 0, 255);\">ON</span> COMPLETION PRESERVE ENABLE;</span></pre>\n</div>\n\n<p><span style=\"color: rgb(0, 0, 0); font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">&nbsp;更多MySql语法可查看：</span><a data-mce-href=\"http://dev.mysql.com/doc/refman/5.1/zh/sql-syntax.html\" href=\"http://dev.mysql.com/doc/refman/5.1/zh/sql-syntax.html\" style=\"font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;\">http://dev.mysql.com/doc/refman/5.1/zh/sql-syntax.html</a></p>\n','Mysql编写定时任务事件',11,'2014-05-13 10:26:26',0,72),(46,'###测试\n###测试\n<br>\n> Im\'ziv , Below is Javascript.\n<br>\n### code\n```java\n//文章内容\nprivate String content;\n\n//文章标题\nprivate String title;\n\n//文章分类\nprivate Integer category;\n```\n<br>\n ```html\n<p>\n	<input id=\"btnRe\" data-action=\"add\" type=\"reset\" value=\"重置\"/>	\n	<input id=\"btnSb\" type=\"button\" value=\"确认发布\"/>		\n</p>	\n```\n\n<br>\n```js\n<script type=\"text/javascript\">\n	var html = marked($(\".con-txt\").html());\n	$(\".con-txt\").on(\'load\', function(){\n		var html = marked($(this).html());\n		$(this).html(html);\n	});			\n</script>\n	```\n','测试',1,'2015-03-15 03:55:00',0,65),(47,'<p style=\"-webkit-print-color-adjust: exact; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px; margin-top: 0px !important;\">本文作者：<a href=\"http://imziv.com\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">Ziv</a>&nbsp;原文地址：<a href=\"http://imziv.com/blog/article/read.htm?id=58\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">http://imziv.com/blog/article/read.htm?id=58</a></p>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">全屏功能是浏览器很早就支持的一项功能了，可以让你页面中的video, image ,div 等等子元素实现全屏浏览，从而带来更好的视觉体验，来看看怎么使用吧。先来看看有哪些API和事件支持。</p>\n\n<h3 id=\"toc_0\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 18px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">API</h3>\n\n<pre class=\"language-javascript\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-javascript\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\">\n<span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// 元素请求全屏显示  \n</span>element<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">requestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// 检测文档的当前状态是否允许执行全屏操作 \n</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">fullscreenEnabled<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">//当前显示的元素是否处于全屏状态，如果处于，则返回为非空对象，否则返回null\n</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">fullscreenElement</span>\n\n<span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">//元素退出全屏显示\n</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">exitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span>\n\n</code></pre>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">上面除了<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">RequestFullscreen()</code>是支持<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">element</code>&nbsp;对象以外，其他3个都只是支持<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">document</code>.</p>\n\n<h4 id=\"toc_1\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">Event</h4>\n\n<pre class=\"language-javascript\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-javascript\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\">fullscreenchange   <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// 全屏状态更改时触发\n</span>\nfullscreenerror  <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">//  执行全屏错误时触发\n</span></code></pre>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">由于每个浏览器实现的方式不一样，所以我们实际的调用中还不能直接这样写，需要针对不同的浏览器做支持检测，下面跟着详细的例子看下具体兼容代码。</p>\n\n<h3 id=\"toc_2\" style=\"font-weight: bold; line-height: 22px; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 14px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">html</h3>\n\n<pre class=\"language-markup\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-markup\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact; color: rgb(226, 119, 122);\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact;\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&lt;</span>body</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&gt;</span></span>\n<span class=\"token tag\" style=\"-webkit-print-color-adjust: exact; color: rgb(226, 119, 122);\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact;\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&lt;</span>img</span> <span class=\"token attr-name\" style=\"-webkit-print-color-adjust: exact;\">id</span><span class=\"token attr-value\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">=</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span>imgFS<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span></span> <span class=\"token attr-name\" style=\"-webkit-print-color-adjust: exact;\">src</span><span class=\"token attr-value\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">=</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">/&gt;</span></span>\n<span class=\"token tag\" style=\"-webkit-print-color-adjust: exact; color: rgb(226, 119, 122);\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact;\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&lt;</span>a</span> <span class=\"token attr-name\" style=\"-webkit-print-color-adjust: exact;\">id</span><span class=\"token attr-value\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">=</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span>btnFS<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span></span> <span class=\"token attr-name\" style=\"-webkit-print-color-adjust: exact;\">href</span><span class=\"token attr-value\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">=</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span>javascript:;<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&quot;</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&gt;</span></span> FullScreen <span class=\"token tag\" style=\"-webkit-print-color-adjust: exact; color: rgb(226, 119, 122);\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact;\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&lt;/</span>a</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&gt;</span></span>\n<span class=\"token tag\" style=\"-webkit-print-color-adjust: exact; color: rgb(226, 119, 122);\"><span class=\"token tag\" style=\"-webkit-print-color-adjust: exact;\"><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&lt;/</span>body</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">&gt;</span></span>\n</code></pre>\n\n<h3 id=\"toc_3\" style=\"font-weight: bold; line-height: 22px; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 14px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">javascript</h3>\n\n<pre class=\"language-javascript\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-javascript\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\"><span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">var</span> fullScreen <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">=</span> document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">getElementById<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token string\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\">&#39;btnFS&#39;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\nfullScreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">addEventListener<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token string\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\">&quot;click&quot;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">,</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">function</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n\n    <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">var</span> status <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">=</span> document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>fullscreenEnabled <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">||</span> \n        document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>webkitFullscreenEnabled <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">||</span>\n        document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>mozFullscreenEnabled <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">||</span>\n        document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>msFullscrrenEnabled<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>status<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">var</span> img <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">=</span> document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">getElementById<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token string\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\">&quot;imgFS&quot;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n            <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>requestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n                img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">requestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n            <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>msRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// IE\n</span>                img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">msRequestFUllscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n            <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>mozRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// Firefox (Gecko)\n</span>                img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">mozRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n            <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>webkitRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// Webkit\n</span>                img<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">webkitRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n            <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            <span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">alert<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token string\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\">&quot;The document not allowed to fullscreen.&quot;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n</code></pre>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">以上代码针对一个图片元素进行了全屏操作的例子，上文中的全屏触发是通过监听一个按钮来实现的，这个地方需要<strong style=\"-webkit-print-color-adjust: exact;\">注意</strong>的是，假如你想在页面载入后就触发全屏，这个事件是不会触发执行全屏显示的。只有通过例如<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">click, keydown</code>等触发事件，才可以启用全屏显示的功能。</p>\n\n<h4 id=\"toc_4\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">监听键盘按钮触发</h4>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">下面的代码示例通过按键<strong style=\"-webkit-print-color-adjust: exact;\">F12</strong>来触发启用或者关闭的操作，主要是利用了<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">element.fullscreenElement</code>&nbsp;方法来判断当前的文档状态，来进行切换的，具体代码如下：</p>\n\n<pre class=\"language-javascript\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-javascript\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\">document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">addEventListener<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token string\" style=\"-webkit-print-color-adjust: exact; color: rgb(126, 198, 153);\">&quot;keydown&quot;</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">,</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">function</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>e<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n    console<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">log<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span>e<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>keyCode<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n    <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>e<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>keyCode <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">==</span> <span class=\"token number\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">123</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// keypress fn + F12 for Mac\n</span>        <span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">fullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n    <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n\n<span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">function</span> <span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">fullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n    <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">var</span> body <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">=</span> document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n    <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">var</span> status <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">=</span> <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">!</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>fullscreenElement <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">&amp;&amp;</span>  <span class=\"token comment\" spellcheck=\"true\" style=\"-webkit-print-color-adjust: exact; color: rgb(153, 153, 153);\">// get the screen status\n</span>        <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">!</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>msFullscreenElement <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">&amp;&amp;</span>\n        <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">!</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>mozFullscreenElement <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">&amp;&amp;</span>\n        <span class=\"token operator\" style=\"-webkit-print-color-adjust: exact; color: rgb(103, 205, 204);\">!</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>webkitFullscreenElement<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n\n    <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>status<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n        <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>requestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">requestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>mozRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">mozRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>webkitRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">webkitRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>msRequestFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            body<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">msRequestFUllscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n    <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n        <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>exitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">exitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>mozExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">mozExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>webkitExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">webkitExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">else</span> <span class=\"token keyword\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">if</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">(</span>document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span>msExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span> <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n            document<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">.</span><span class=\"token function\" style=\"-webkit-print-color-adjust: exact; color: rgb(240, 141, 73);\">msExitFullscreen<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 204, 204);\">(</span></span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">)</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n        <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n    <span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n</code></pre>\n\n<h4 id=\"toc_5\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">全屏样式</h4>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">全屏效果下，可以启用针对该状态下的特定样式，从而达到更好的浏览效果。样式定义如下：</p>\n\n<pre class=\"language-css\" style=\"white-space: pre; -webkit-print-color-adjust: exact; margin-top: 0.5em; margin-bottom: 0.5em; border: 1px solid rgb(204, 204, 204); line-height: 1.5; overflow: auto; padding: 1em; border-radius: 3px; color: rgb(204, 204, 204); font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-break: normal; tab-size: 4; background-color: rgb(45, 45, 45);\">\n<code class=\"language-css\" style=\"-webkit-print-color-adjust: exact; margin: 0px; padding: 0px; border: none; border-radius: 3px; font-family: Consolas, Monaco, \'Andale Mono\', monospace; direction: ltr; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; background-color: transparent;\"><span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\"><span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:-webkit-full-screen</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> // Webkit\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n \n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\"><span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:-moz-full-screen</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>  // Gecko\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n \n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\"><span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:-ms-fullscreen</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span> // IE\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n \n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\"><span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:fullscreen</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n\n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">// 调用示例\n\n<span class=\"token id\" style=\"-webkit-print-color-adjust: exact;\">#elementID</span> <span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:fullscreen</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n    <span class=\"token property\" style=\"-webkit-print-color-adjust: exact; color: rgb(248, 197, 85);\">width</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">:</span>100%<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n    <span class=\"token property\" style=\"-webkit-print-color-adjust: exact; color: rgb(248, 197, 85);\">height</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">:</span>100%<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span>\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n\n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\"><span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:fullscreen</span><span class=\"token pseudo-element\" style=\"-webkit-print-color-adjust: exact;\">::backdrop</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>  // 背光\n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n\n<span class=\"token selector\" style=\"-webkit-print-color-adjust: exact; color: rgb(204, 153, 205);\">// 全屏背光，这是一个新的样式属性，但是目前浏览器支持的的都不太好， 在IE11中被支持，另外下面提到的Opera12<span class=\"token class\" style=\"-webkit-print-color-adjust: exact;\">.1</span>,使用了<span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:fullscreen-ancestor</span>， 调用方法如下\n\n<span class=\"token pseudo-class\" style=\"-webkit-print-color-adjust: exact;\">:-ms-fullscreen</span><span class=\"token pseudo-element\" style=\"-webkit-print-color-adjust: exact;\">::-ms-backdrop</span> </span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">{</span>\n    <span class=\"token property\" style=\"-webkit-print-color-adjust: exact; color: rgb(248, 197, 85);\">background-color</span><span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">:</span> #000<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">;</span> \n<span class=\"token punctuation\" style=\"-webkit-print-color-adjust: exact;\">}</span>\n</code></pre>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">在这个地方需要注意的是，Gecko和Webkit在全屏状态下显示是有差异的，Gecko会默认把指定的全屏元素进行<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">width:100%;height:100%</code>,而Webkit则是显示一片黑色，所以这个地方就需要针对全屏的元素进行样式调整了，参考以上代码示例。</p>\n\n<h4 id=\"toc_6\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">浏览器兼容情况</h4>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">参考地址：<a href=\"http://caniuse.com/#search=fullscreen\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">Caniuse</a></p>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">另外上面有说道下面几个问题，可以注意下。</p>\n\n<ul style=\"padding-left: 30px; -webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">\n	<li style=\"-webkit-print-color-adjust: exact; margin: 0px;\">IE11全屏状态下是不允许滚动的</li>\n	<li style=\"-webkit-print-color-adjust: exact; margin: 0px;\">IE11 并不允许通过<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">keydown or pointerdown</code>事件来触发<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">msRequestFullscreen()</code>，<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">keypress 和click</code>没有问题</li>\n	<li style=\"-webkit-print-color-adjust: exact; margin: 0px;\">IE11对iframe中使用全屏支持的并不是很好</li>\n	<li style=\"-webkit-print-color-adjust: exact; margin: 0px;\">在全屏模式中Safari阻塞了keyboard事件（出于安全考虑），<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">但是我上面代码中，在Yosmite中，通过监听F12，Safari是可以正常工作的</code></li>\n	<li style=\"-webkit-print-color-adjust: exact; margin: 0px;\">Opera 12.1 使用老的标准<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">:fullscreen-ancestor</code>&nbsp;伪类替代了&nbsp;<code style=\"-webkit-print-color-adjust: exact; margin: 0px 2px; padding: 0px 5px; white-space: nowrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; background-color: rgb(248, 248, 248);\">::backdrop</code>伪元素</li>\n</ul>\n\n<h4 id=\"toc_7\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">总结</h4>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\">总之全屏是一个非常棒的特性，它可以让我们的Web拥有像原生应用一样体验，在以后的项目中会多尝试下这个特性。</p>\n\n<h4 id=\"toc_8\" style=\"font-weight: bold; -webkit-print-color-adjust: exact; margin: 20px 0px 10px; padding: 0px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 16px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif;\">本文参考</h4>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">Using fullscreen mode</a></p>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\"><a href=\"https://fullscreen.spec.whatwg.org/\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">Fullscreen API Living Standard</a></p>\n\n<p style=\"-webkit-print-color-adjust: exact; margin: 15px 0px; color: rgb(0, 0, 0); font-family: Helvetica, arial, sans-serif; font-size: 14px; line-height: 22px;\"><a href=\"http://www.sitepoint.com/use-html5-full-screen-api/\" style=\"color: rgb(65, 131, 196); -webkit-print-color-adjust: exact;\">How to Use the HTML5 Full-Screen API (Again)</a></p>\n\n<p>&nbsp;</p>\n','测试2',1,'2015-03-15 06:45:55',0,11);
/*!40000 ALTER TABLE `tb_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_article_category`
--

DROP TABLE IF EXISTS `tb_article_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_article_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '分类ID',
  `name` varchar(20) NOT NULL COMMENT '分类名称',
  `description` text COMMENT '分类描述',
  `sort` int(11) NOT NULL DEFAULT '0' COMMENT '排序字段',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_article_category`
--

LOCK TABLES `tb_article_category` WRITE;
/*!40000 ALTER TABLE `tb_article_category` DISABLE KEYS */;
INSERT INTO `tb_article_category` VALUES (1,'Java',NULL,0),(2,'web前端',NULL,0),(3,'Linux',NULL,0),(4,'生活/杂文',NULL,0),(6,'产品设计',NULL,0),(7,'数据结构与算法',NULL,0),(9,'NodeJs',NULL,0),(10,'互联网',NULL,0),(11,'Mysql数据库',NULL,0);
/*!40000 ALTER TABLE `tb_article_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_article_comment`
--

DROP TABLE IF EXISTS `tb_article_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_article_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `article_id` int(11) NOT NULL COMMENT '文章ID',
  `user_name` varchar(50) NOT NULL COMMENT '留言人姓名',
  `content` text NOT NULL COMMENT '留言内容',
  `blog_url` varchar(200) DEFAULT NULL COMMENT '博客地址',
  `create_time` datetime DEFAULT NULL COMMENT '留言时间',
  `email` varchar(50) DEFAULT NULL COMMENT '电子邮件',
  `father_comm` int(11) DEFAULT '0' COMMENT '父级评论，默认0',
  `be_feedback` varchar(200) DEFAULT NULL COMMENT '如果为回复内容，此字段为回复人姓名链接',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_article_comment`
--

LOCK TABLES `tb_article_comment` WRITE;
/*!40000 ALTER TABLE `tb_article_comment` DISABLE KEYS */;
INSERT INTO `tb_article_comment` VALUES (41,34,'admin','发生地方','','2014-04-29 10:05:15','momo_ewf@foxmail.com',0,''),(42,43,'慕春','来过！！','http://www.mspring.org','2014-05-04 06:50:56','gaoyoubo@mspring.org',0,''),(43,45,'屠龙','原来如此。','','2014-05-19 04:57:41','2572323686@qq.com',0,''),(48,45,'Ziv','test...','','2015-03-14 23:06:51','',45,'<a target=\'_blank\' href=\'undefined\'>undefined</a>'),(49,45,'Ziv','test','','2015-03-14 23:07:46','',0,'');
/*!40000 ALTER TABLE `tb_article_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_article_tag`
--

DROP TABLE IF EXISTS `tb_article_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `description` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_article_tag`
--

LOCK TABLES `tb_article_tag` WRITE;
/*!40000 ALTER TABLE `tb_article_tag` DISABLE KEYS */;
INSERT INTO `tb_article_tag` VALUES (1,'Java',NULL),(2,'Javascript',NULL),(4,'Node.js',NULL),(5,'Memcache',NULL),(6,'Hadoop',NULL),(9,'程序生活',NULL),(10,'SpringMVC',NULL),(11,'Mysql',NULL);
/*!40000 ALTER TABLE `tb_article_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_extend_page`
--

DROP TABLE IF EXISTS `tb_extend_page`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_extend_page` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `url` varchar(500) DEFAULT NULL COMMENT '页面地址',
  `name` varchar(20) NOT NULL COMMENT '页面名称',
  `page_content` text COMMENT '导航页面的具体内容',
  `display` int(1) DEFAULT '0' COMMENT '是否显示该页面，0表示显示，1非显示',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_extend_page`
--

LOCK TABLES `tb_extend_page` WRITE;
/*!40000 ALTER TABLE `tb_extend_page` DISABLE KEYS */;
INSERT INTO `tb_extend_page` VALUES (3,'','Lab项目','<!-- blog -->\r\n<div style=\"background: #EEE;padding: 5px;border-radius: 5px;-webkit-border-radius: 5px;\">\r\n<h3><a href=\"http://www.imziv.com/\">一、ZBLOG</a></h3>\r\n\r\n<p>这是一套采用Java语言写的博客系统，主要包括的功能有：</p>\r\n\r\n<p>1. 博客文章的发布，增删改查管理;</p>\r\n\r\n<p>2. 留言板功能;</p>\r\n\r\n<p>3. 导航的动态扩展，<span style=\"line-height: 1.6;\">页面的基本编辑</span><span style=\"line-height: 1.6;\">; </span></p>\r\n\r\n<p><span style=\"line-height: 1.6;\">4. 文章归档，分类等等功能。</span><span style=\"line-height: 1.6;\"> </span></p>\r\n\r\n<p><span style=\"line-height: 1.6;\">博客服务器端采用的是SpringMVC+Mybatis框架，前端结合了一些Bootstrap框架，富文本编辑器使用的是CKEditor.代码高亮使用的是highlight.js </span></p>\r\n\r\n<p><span style=\"line-height: 1.6;\">浏览地址：</span><a href=\"http://www.imziv.com/\" style=\"line-height: 1.6;\">http://www.imziv.com/</a></p>\r\n\r\n<p>GitHub地址：<a href=\"https://github.com/wewoor/ZBLOG/wiki\">https://github.com/wewoor/ZBLOG/wiki</a></p>\r\n</div>\r\n\r\n<!-- HttpTool -->\r\n<div style=\"background: #EEE;padding: 5px;border-radius: 5px;-webkit-border-radius: 5px;margin-top:20px;\">\r\n<h3><a href=\"http://httptool.duapp.com/\">二<u>、Http请求模拟工具(HttpTool)</u></a></h3>\r\n\r\n<p>利用HttpClient做的一个Http请求模拟工具，可以使用它通过在Web上模拟GET,POST,PUT,DELETE请求，做接口调试的时候可以用之测试。</p>\r\n\r\n<p>目前的第一个版本没有经过严格的测试，应该残留不少的Bug.有心的朋友可以提醒我，谢谢！</p>\r\n\r\n<p><span style=\"line-height: 1.6;\">浏览地址：<a href=\"http://httptool.duapp.com/\">http://httptool.duapp.com/</a></span></p>\r\n\r\n<p>GitHub地址：<a href=\"https://github.com/wewoor/HTTP_TOOL\">https://github.com/wewoor/HTTP_TOOL</a></p>\r\n</div>\r\n',0),(5,'https://github.com/wewoor','GitHub','<p>暂无内容</p>\r\n',0),(6,'','关于','<h4>&nbsp;关于博客：</h4>\r\n\r\n<p style=\"margin-left: 40px;\">&nbsp; 这个博客系统是我在大学时候写的，很长一段时间没有整理，有许多地方不够完善，最近利用工作之余的时间我又重构了一下,完善了后台管理系统，和前端页面样式的重构，并且新添加了归档，标签等等功能。当然还有些功能没有添加上去,之后会陆续完善。 博客利用了Bootstrap2.0，服务器端是采用Java语言编写的。高亮代码我是用的highlight.js，后台富文本编辑插件我用的ckeditor,但是与highlight.js的整合还有点问题。虽然博客系统业务很简单，功能也并不复杂，但是当一个人独立的完成一个完整的系统时，还是学到了不少东西。如果对这个博客系统感兴趣，可以去git上面down这个代码。</p>\r\n\r\n<p style=\"margin-left: 40px;\">GitHub地址:<a href=\"https://github.com/wewoor/ZBLOG/wiki\" target=\"_blank\">https://github.com/wewoor/ZBLOG/wiki</a></p>\r\n\r\n<h4>&nbsp;关于我：</h4>\r\n\r\n<div><span style=\"line-height: 1.6;\">&nbsp; &nbsp;Ziv，90后程序员一枚，目前身居南京，主要从事Java语言项目的开发， 私底下比较喜欢研究前端，欢迎交流。<img alt=\"\" src=\"http://tp2.sinaimg.cn/1375964837/180/40039125971/1\" style=\"width: 150px; height: 150px; float: right;\" /></span>\r\n\r\n<div>\r\n<p><span style=\"line-height: 1.6;\"><strong>&nbsp; &nbsp;</strong></span></p>\r\n\r\n<p><span style=\"line-height: 1.6;\"><strong>&nbsp;QQ:</strong>191879617</span></p>\r\n\r\n<p><strong>&nbsp;Email：</strong>wewoor@foxmail.com</p>\r\n</div>\r\n</div>\r\n',0);
/*!40000 ALTER TABLE `tb_extend_page` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_friendly_link`
--

DROP TABLE IF EXISTS `tb_friendly_link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_friendly_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `link` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_friendly_link`
--

LOCK TABLES `tb_friendly_link` WRITE;
/*!40000 ALTER TABLE `tb_friendly_link` DISABLE KEYS */;
INSERT INTO `tb_friendly_link` VALUES (4,'我在博客园','http://www.cnblogs.com/zivxiaowei/'),(6,'城市病人网络电台','http://www.citypatient.cn/'),(7,'慕春博客','http://www.mspring.org/'),(10,'机器学习（gump 甘超）','http://www.gumpcs.com/');
/*!40000 ALTER TABLE `tb_friendly_link` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tb_user`
--

DROP TABLE IF EXISTS `tb_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `name` varchar(20) NOT NULL COMMENT '名称',
  `password` varchar(50) NOT NULL COMMENT '密码',
  `show_name` varchar(20) DEFAULT NULL COMMENT '显示名称',
  `email` varchar(50) DEFAULT NULL COMMENT '电子邮箱',
  `description` text COMMENT '描述信息',
  `image` text COMMENT '图片',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_user`
--

LOCK TABLES `tb_user` WRITE;
/*!40000 ALTER TABLE `tb_user` DISABLE KEYS */;
INSERT INTO `tb_user` VALUES (1,'admin','NFvOCciXZkU=','Ziv小威','wewoor@foxmail.com',NULL,NULL);
/*!40000 ALTER TABLE `tb_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-03-26 20:04:37
